version: "2"

env_file: .env

services:
  portus:
    image: opensuse/portus:head
    labels:
      io.rancher.scheduler.affinity:host_label: traefik_lb=true
    environment:
 #     - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}
      - PORTUS_MACHINE_FQDN=${MACHINE_FQDN}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_PRODUCTION_HOST=db
      - PORTUS_PRODUCTION_DATABASE=portus_production
      - PORTUS_PRODUCTION_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5
      - PORTUS_DELETE_ENABLED='true'


      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/portus.key
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}

      # SSL
      - PORTUS_PUMA_TLS_KEY=/certificates/portus.key
      - PORTUS_PUMA_TLS_CERT=/certificates/portus.crt

      # NGinx is serving the assets instead of Puma. If you want to change this,
      # uncomment this line.
      - RAILS_SERVE_STATIC_FILES='true'
    ports:
      - 3000:3000
    links:
      - db
    depends_on:
      - db
    volumes:
      - ${PWD}/secrets:/certificates:ro
      - ${PWD}/config/config.yml:/srv/Portus/config/config.yml:ro
      #- static:/srv/Portus/public

  registry-ui-lb:
    image: rancher/lb-service-haproxy:v0.7.15
    ports:
    - 1780:1780
    labels:
      io.rancher.container.agent.role: environmentAdmin,agent
      io.rancher.container.agent_service.drain_provider: 'true'
      traefik.frontend.rule: Host:reg.all.rafabsb.me
      traefik.enable: 'true'
      traefik.port: '1780'
      io.rancher.container.create_agent: 'true'
    depends_on:
      - portus
      - crono

  crono:
    image: opensuse/portus:head
    labels:
      io.rancher.scheduler.affinity:host_label: portus=true
    environment:
#      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}
      - PORTUS_MACHINE_FQDN=${MACHINE_FQDN}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_PRODUCTION_HOST=db
      - PORTUS_PRODUCTION_DATABASE=portus_production
      - PORTUS_PRODUCTION_PASSWORD=${DATABASE_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/portus.key
      - PORTUS_PASSWORD=${PORTUS_PASSWORD}

      # We want to execute crono, not portus
      - PORTUS_INIT_COMMAND=bin/crono
    links:
      - db
    volumes:
      - ${PWD}/secrets:/certificates:ro

  db:
    image: library/mariadb:10.0.23
    labels:
      io.rancher.scheduler.affinity:host_label: portus=true
    environment:
      - PORTUS_MACHINE_FQDN=${MACHINE_FQDN}
      - MYSQL_DATABASE=portus_production

      # Again, the password shouldn't be handled like this.
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - ${PORTUS_DATA_DIR}/var/lib/portus/mariadb:/var/lib/mysql

  registry:
    image: library/registry:2.6
    labels:
      io.rancher.scheduler.affinity:host_label: portus=true
    command: ["/bin/sh", "/etc/docker/registry/init"]
    environment:
      # Authentication
      REGISTRY_AUTH_TOKEN_REALM: https://${MACHINE_FQDN}:3000/v2/token
      REGISTRY_AUTH_TOKEN_SERVICE: ${MACHINE_FQDN}:5000
      REGISTRY_AUTH_TOKEN_ISSUER: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /secrets/portus.crt

      # SSL
      REGISTRY_HTTP_TLS_CERTIFICATE: /secrets/portus.crt
      REGISTRY_HTTP_TLS_KEY: /secrets/portus.key
      REGISTRY_HTTP_SECRET: ${SECRET_KEY_BASE}
      
      # Portus endpoint
      REGISTRY_NOTIFICATIONS_ENDPOINTS: >
        - name: portus
          url: https://${MACHINE_FQDN}:3000/v2/webhooks/events
          timeout: 2000ms
          threshold: 5
          backoff: 1s
    volumes:
      - ${PORTUS_DATA_DIR}/var/lib/portus/registry:/var/lib/registry
      - ${PWD}/secrets:/secrets:ro
      - ${PWD}/registry/config.yml:/etc/docker/registry/config.yml
      - ${PWD}/registry/init:/etc/docker/registry/init
    ports:
      - 5000:5000
      - 5001:5001 # required to access debug service
    links:
      - portus:portus

#  nginx:
#    image: library/nginx:alpine
#    labels:
#      io.rancher.scheduler.affinity:host_label: portus=true
#    volumes:
#      - ${PWD}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ${PWD}/secrets:/secrets:ro
#      - static:/srv/Portus/public:ro
#    ports:
#      - 5080:80
#    links:
#      - registry:registry
#      - portus:portus
